
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.2)

2024-03-18T02:13:06.675Z  INFO 1 --- [availability-service] [           main] c.f.a.AvailabilityServiceApplication     : Starting AvailabilityServiceApplication v0.0.1-SNAPSHOT using Java 17.0.2 with PID 1 (/app/availability-service.jar started by root in /app)
2024-03-18T02:13:06.695Z  INFO 1 --- [availability-service] [           main] c.f.a.AvailabilityServiceApplication     : No active profile set, falling back to 1 default profile: "default"
2024-03-18T02:13:08.853Z  INFO 1 --- [availability-service] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-03-18T02:13:09.194Z  INFO 1 --- [availability-service] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 322 ms. Found 1 JPA repository interface.
2024-03-18T02:13:09.839Z  INFO 1 --- [availability-service] [           main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=a7e6f1fe-b6f2-3713-ab44-28ec8bcddbcb
2024-03-18T02:13:10.223Z  WARN 1 --- [availability-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'methodSecurityConfig' of type [com.funtown.availabilityService.config.MethodSecurityConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [projectingArgumentResolverBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-18T02:13:10.294Z  WARN 1 --- [availability-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-03-18T02:13:10.301Z  WARN 1 --- [availability-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-18T02:13:10.306Z  WARN 1 --- [availability-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-18T02:13:10.328Z  WARN 1 --- [availability-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-18T02:13:10.333Z  WARN 1 --- [availability-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-18T02:13:10.337Z  WARN 1 --- [availability-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda$619/0x0000000800fcb270] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-18T02:13:10.340Z  WARN 1 --- [availability-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-18T02:13:10.357Z  WARN 1 --- [availability-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-18T02:13:10.371Z  WARN 1 --- [availability-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-18T02:13:10.377Z  WARN 1 --- [availability-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-18T02:13:10.382Z  WARN 1 --- [availability-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-18T02:13:10.387Z  WARN 1 --- [availability-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-18T02:13:10.405Z  WARN 1 --- [availability-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-18T02:13:10.435Z  WARN 1 --- [availability-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-18T02:13:10.439Z  WARN 1 --- [availability-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-18T02:13:10.442Z  WARN 1 --- [availability-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-18T02:13:10.447Z  WARN 1 --- [availability-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-18T02:13:10.451Z  WARN 1 --- [availability-service] [           main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-18T02:13:10.959Z  INFO 1 --- [availability-service] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8090 (http)
2024-03-18T02:13:10.995Z  INFO 1 --- [availability-service] [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-03-18T02:13:11.002Z  INFO 1 --- [availability-service] [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-03-18T02:13:11.067Z  INFO 1 --- [availability-service] [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-03-18T02:13:11.071Z  INFO 1 --- [availability-service] [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4139 ms
2024-03-18T02:13:11.396Z  INFO 1 --- [availability-service] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-03-18T02:13:11.466Z  INFO 1 --- [availability-service] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.1.Final
2024-03-18T02:13:11.521Z  INFO 1 --- [availability-service] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-03-18T02:13:11.848Z  INFO 1 --- [availability-service] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-03-18T02:13:11.884Z  INFO 1 --- [availability-service] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-03-18T02:13:12.201Z  INFO 1 --- [availability-service] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7f2ca6f8
2024-03-18T02:13:12.205Z  INFO 1 --- [availability-service] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-03-18T02:13:12.259Z  WARN 1 --- [availability-service] [           main] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-03-18T02:13:13.809Z  INFO 1 --- [availability-service] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: drop table if exists availability cascade
Hibernate: create table availability (from_date date not null, id serial not null, to_date date not null, contact varchar(255), fullname varchar(255) not null, position varchar(255), status varchar(255) not null check (status in ('ACCEPTED','REJECTED','UNHANDLED')), username varchar(255), primary key (id))
2024-03-18T02:13:13.921Z  INFO 1 --- [availability-service] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-03-18T02:13:14.743Z  WARN 1 --- [availability-service] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-03-18T02:13:14.838Z  WARN 1 --- [availability-service] [           main] .s.s.UserDetailsServiceAutoConfiguration : 

Using generated security password: 8440c777-0d4b-4420-b6b2-7892a34ec3b5

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-03-18T02:13:15.413Z  INFO 1 --- [availability-service] [           main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6e7d9d0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b0d818d, org.springframework.security.web.context.SecurityContextHolderFilter@580c4c0b, org.springframework.security.web.header.HeaderWriterFilter@3cdc5155, org.springframework.web.filter.CorsFilter@7212b28e, org.springframework.security.web.authentication.logout.LogoutFilter@4a532271, com.funtown.availabilityService.filter.JwtTokenFilter@3380ca3d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5bc44d78, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2f408960, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@306c8e09, org.springframework.security.web.access.ExceptionTranslationFilter@3545c913]
2024-03-18T02:13:19.755Z  INFO 1 --- [availability-service] [           main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-03-18T02:13:19.788Z  WARN 1 --- [availability-service] [           main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-03-18T02:13:19.808Z  INFO 1 --- [availability-service] [           main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-03-18T02:13:19.886Z  INFO 1 --- [availability-service] [           main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-03-18T02:13:19.891Z  INFO 1 --- [availability-service] [           main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-03-18T02:13:19.918Z  INFO 1 --- [availability-service] [           main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-03-18T02:13:19.919Z  INFO 1 --- [availability-service] [           main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-03-18T02:13:19.919Z  INFO 1 --- [availability-service] [           main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-03-18T02:13:19.919Z  INFO 1 --- [availability-service] [           main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-03-18T02:13:19.919Z  INFO 1 --- [availability-service] [           main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-03-18T02:13:19.919Z  INFO 1 --- [availability-service] [           main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-03-18T02:13:19.919Z  INFO 1 --- [availability-service] [           main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-03-18T02:13:20.238Z  INFO 1 --- [availability-service] [           main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-03-18T02:13:20.242Z  INFO 1 --- [availability-service] [           main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-03-18T02:13:20.246Z  INFO 1 --- [availability-service] [           main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-03-18T02:13:20.254Z  INFO 1 --- [availability-service] [           main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1710728000253 with initial instances count: 0
2024-03-18T02:13:20.259Z  INFO 1 --- [availability-service] [           main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application AVAILABILITY-SERVICE with eureka with status UP
2024-03-18T02:13:20.259Z  INFO 1 --- [availability-service] [           main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1710728000259, current=UP, previous=STARTING]
2024-03-18T02:13:20.261Z  INFO 1 --- [availability-service] [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_AVAILABILITY-SERVICE/c9a8341b0d35:availability-service:8090: registering service...
2024-03-18T02:13:20.277Z  INFO 1 --- [availability-service] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8090 (http) with context path ''
2024-03-18T02:13:20.278Z  INFO 1 --- [availability-service] [           main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8090
2024-03-18T02:13:20.287Z  INFO 1 --- [availability-service] [           main] c.f.a.AvailabilityServiceApplication     : Started AvailabilityServiceApplication in 14.713 seconds (process running for 15.502)
2024-03-18T02:13:20.300Z  INFO 1 --- [availability-service] [nfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_AVAILABILITY-SERVICE/c9a8341b0d35:availability-service:8090 - registration status: 204
2024-03-18T02:13:50.242Z  INFO 1 --- [availability-service] [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-03-18T02:13:50.242Z  INFO 1 --- [availability-service] [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-03-18T02:13:50.242Z  INFO 1 --- [availability-service] [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-03-18T02:13:50.243Z  INFO 1 --- [availability-service] [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-03-18T02:13:50.243Z  INFO 1 --- [availability-service] [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-03-18T02:13:50.243Z  INFO 1 --- [availability-service] [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Application version is -1: false
2024-03-18T02:13:50.243Z  INFO 1 --- [availability-service] [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-03-18T02:13:50.252Z  INFO 1 --- [availability-service] [freshExecutor-0] com.netflix.discovery.DiscoveryClient    : The response status is 200
